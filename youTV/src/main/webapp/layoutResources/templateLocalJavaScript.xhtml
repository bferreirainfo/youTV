<script>
//============================== OnPageLoad =======================================
$(window).ready(function(){
var menu = new cbpHorizontalSlideOutMenu( document.getElementById( 'cbp-hsmenu-wrapper' ) );
abaAtual = 'searchResult';
openInicialTab();
loadSlider();
document.getElementById("form:searchTerm").focus();
with (document.getElementById("form:searchTerm")) {
    onblur = function(e) {
        setTimeout(function(){e.target.focus()});
    }
    onkeypress = function(e){
    	if(e.keyCode == 13){
    		document.getElementById('form:searchButton').click();
    		e.preventDefault();
    	}
    }
}
});
//============================== OnAjaxComplete =======================================
// ============================== ProgressBar =======================================
	//configurando  progress bar
	NProgress.configure({speed:500, showSpinner: false});
	$(document).ajaxStart(function() {
		NProgress.start();
		NProgress.set(0.5);
	});
	$(document).ajaxComplete(function() {
		NProgress.done();
	});
	
// ============================== bx slider configuration =======================================		
		// Api  http://bxslider.com/options 
		var sliderArray = new Array();
		var sliderSettings =  {
			  slideWidth: 175,
			  slideHeight: 80,
			  minSlides: 2,
			  maxSlides: 99,
			  slideMargin: 10,
			  onSliderLoad: function(){
				  $('.bx-wrapper').css('margin','0 0 0 0');
				  //adicionar funcões no on focus
				  //$('.bx-wrapper').each(function(index){$(this).attr('tabindex',index);});
				  $('.videoLinkTitle').ellipsis({row: 2});
	 			 }
			};
		function loadSlider(){
			 $('.bxslider').each(function(i){
			        sliderArray[i] = $(this).bxSlider(sliderSettings);
			    });
		}
		function resizeSlider(){
			$.each(sliderArray, function( index, value ) {
				 var currentSlider = value.getCurrentSlide();
			 	 value.reloadSlider();
			 	 value.goToSlide(currentSlider);
			});

		}
// ============================== Abas =======================================		
			
		
// ============================== youtube =======================================	
		var player;
		var youtubeVideoId;
		
		function playYoutube(youtubeVideoId){
				this.youtubeVideoId = youtubeVideoId;
				//ao esconder o player uma mensagem de erro será gerada se tentar usa-lo, portanto devemos exbir antes de utiliza-lo.
				visualizarApenasPlayer('youtubePlayerWrapper');
				 //construir o objeto do iframe
				 // 2. This code loads the IFrame Player API code asynchronously.
			 	if(player == null){
				    var tag = document.createElement('script');
				    tag.src = "https://www.youtube.com/iframe_api";
				    var firstScriptTag = document.getElementsByTagName('script')[0];
				    firstScriptTag.parentNode.insertBefore(tag, firstScriptTag);
			 	}else{
			 		player.loadVideoById(youtubeVideoId);
					currenctlyPlayerStopCommand = function () {player.stopVideo();} ;
			 	}
				updateUrl('youtube',youtubeVideoId);
			    currenctlyPlayerWrapper = 'youtubePlayerWrapper';
		}
		// 3. This function creates an iframe (and YouTube player)
		//	  after the API code downloads.
		function onYouTubeIframeAPIReady() {
		    player = new YT.Player('youtubePlayerWrapper', {
		        videoId: youtubeVideoId,
		        width:Math.round($(window).width()*0.75),
		        height:Math.round($(window).height()*0.65),
		        events: {
		            'onReady': onYoutubePlayerReady,
		          }
		      });
		    }
		    
		function onYoutubePlayerReady(event){
		    currenctlyPlayerStopCommand = function () {player.stopVideo();} ;
			event.target.playVideo();
		}
// ============================== Vimeo =======================================	

function playVimeo(videoVimeoId){
   visualizarApenasPlayer('vimeoPlayerWrapper');
   var videoUrl = 'http://www.vimeo.com/'+videoVimeoId+'api=1&amp;player_id=vimeoIframe';
   // This is the oEmbed endpoint for Vimeo (we're using JSON)
   // (Vimeo also supports oEmbed discovery. See the PHP example.)
   var endpoint = 'http://www.vimeo.com/api/oembed.json';

   // Tell Vimeo what function to call
   var callback = 'embedVideo';
   // Put together the URL
   var url = endpoint + '?url=' + encodeURIComponent(videoUrl) + '&amp;callback=' + callback + '&amp;width='+ Math.round($(window).width()*0.75) + '&amp;height='+ Math.round($(window).height()*0.65) + '&amp;autoplay=true';
   // This function puts the video on the page
    
   var js = document.createElement('script');
   js.setAttribute('type', 'text/javascript');
   js.setAttribute('src', url);
   document.getElementsByTagName('head').item(0).appendChild(js);
   
   // update URL
   updateUrl('vimeo',videoVimeoId);
   
}
//this function will be called after playVimeo(videoVimeoId); 
var vimeoPlayer
function embedVideo(video) {
	video.html = video.html.substring(0,7) + ' id="vimeoIframe"' + video.html.substring(7);
    document.getElementById('vimeoPlayerWrapper').innerHTML = unescape(video.html);
    
     var vimeoIframe = document.getElementById('vimeoIframe');
	 vimeoPlayer = $f(vimeoIframe);
	//When player is ready it will call 'onVimeoPlayerRead()'
	 vimeoPlayer.addEvent('ready', onVimeoPlayerRead());
}
function onVimeoPlayerRead(){
	 
	//var playButton = document.getElementById("play-button");
	//playButton.addEventListener("click", function() {
	//  vimeoPlayer.api("play");
	//});
	
	//var pauseButton = document.getElementById("pause-button");
	//pauseButton.addEventListener("click", function() {
	//  vimeoPlayer.api("pause");
	//});
	currenctlyPlayerStopCommand = function() {vimeoPlayer.api("unload")};
	currenctlyPlayerWrapper = 'vimeoPlayerWrapper';
	
}
// ============================== Controle Abas =======================================	
function openInicialTab(){
	switch('#{pesquisaBean.operation}'){
		case 'search' : click('searchLTabLink'); break;
		case 'playYoutube' : playYoutube('#{pesquisaBean.videoView.id}');break;
		case 'playVimeo' : playVimeo('#{pesquisaBean.videoView.id}');break;
		default : alert("operação não recohecida"); 
	}
}
function display(abaId){
	if(abaId != abaAtual){
		hiddeElementById(abaAtual);
		showElementById(abaId);
		abaAtual=abaId;
	}
}

var abaAtual;
// ============================== Utility =======================================	
function updateUrl(action,value){
	history.pushState(null, null, 'index.faces?' + action + '=' + value);
}
var currenctlyPlayerStopCommand;
var currenctlyPlayerWrapper;

function visualizarApenasPlayer(playerWrapper){
	click('watchingTabLink');
	if(currenctlyPlayerStopCommand != null){
		currenctlyPlayerStopCommand();
		hiddeElementById(currenctlyPlayerWrapper);
	}
	showElementById(playerWrapper);
}
function hiddeElementById(playerWrapper){
	document.getElementById(playerWrapper).style.display='none';
}
function showElementById(playerWrapper){
	document.getElementById(playerWrapper).style.display='block';
	document.getElementById('playerColumn').style.width= Math.round($(window).width()*0.75) + "px";
	document.getElementById('playerColumn').style.height= Math.round($(window).height()*0.65) +"px";
}
function click(id){
	document.getElementById(id).click();
}

function testando(){
	$('.bx-wrapper').hover(function() {
	    this.focus();
	}, function() {
	    this.blur();
	}).keydown(function(e) {
	    alert(e.keyCode);
	});
}
</script>
